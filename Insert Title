#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <ESP8266WiFi.h> // Use this for ESP8266, change to ESP32WiFi.h for ESP32

// Initialize LCD
LiquidCrystal_I2C lcd(0x27, 16, 2); // Address 0x27 for 16x2 LCD

// Pin Definitions
const int buttonPin = 2; // Button for mode switching (can connect to any digital pin)

// Wi-Fi Setup (ESP8266/ESP32)
const char *ssid = "TP-Link_Guest_C4FF_5G_Gaming";         // Your Wi-Fi SSID
const char *password = "83198878"; // Your Wi-Fi password

WiFiServer server(80);  // Create a web server on port 80

// Invention Ideas and Hurtful Comments Arrays
const char *inventionIdeas[] = {
  "Self-watering plants for lazy gardeners!",
  "An app to track your procrastination level!",
  "A pillow that wakes you up with a slap!"
};

const char *hurtfulComments[] = {
  "That's not an invention, it's a crime!",
  "Why would anyone even think of this?",
  "Congratulations, you just wasted everyone's time!"
};

// Mode Variables
int currentMode = 0; // 0 for Useless, 1 for Idiotic, 2 for Insane

void setup() {
  lcd.begin(16, 2);        // Initialize the LCD
  lcd.print("Invention Mode");

  pinMode(buttonPin, INPUT);  // Initialize button pin
  randomSeed(analogRead(A0)); // Initialize random seed for idea generation

  // Start Serial Monitor for debugging
  Serial.begin(9600);
  
  // Connect to Wi-Fi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to Wi-Fi...");
  }
  Serial.println("Wi-Fi connected");

  server.begin();  // Start the web server
}

void loop() {
  int buttonState = digitalRead(buttonPin);

  if (buttonState == HIGH) {
    // Switch mode cyclically (Useless -> Idiotic -> Insane -> Useless)
    currentMode = (currentMode + 1) % 3;
    delay(500);  // Debounce delay
  }

  // Display current mode and random idea
  displayIdea();

  // Random beep (optional with buzzer)
  if (random(0, 10) > 8) {
    tone(3, 1000);  // Pin 3 for buzzer
    delay(100);
    noTone(3);
  }

  // Handle the web server for mode switching
  WiFiClient client = server.available();
  if (client) {
    String request = client.readStringUntil('\r');
    client.flush();

    if (request.indexOf("/mode/0") != -1) {  // Useless Mode
      currentMode = 0;
    } else if (request.indexOf("/mode/1") != -1) {  // Idiotic Mode
      currentMode = 1;
    } else if (request.indexOf("/mode/2") != -1) {  // Insane Mode
      currentMode = 2;
    }

    // Send the HTML response
    String html = "<html><body>";
    html += "<h1>Current Mode: ";
    if (currentMode == 0) {
      html += "Useless Mode";
    } else if (currentMode == 1) {
      html += "Idiotic Mode";
    } else {
      html += "Insane Mode";
    }
    html += "</h1><a href='/mode/0'>Useless Mode</a><br>";
    html += "<a href='/mode/1'>Idiotic Mode</a><br>";
    html += "<a href='/mode/2'>Insane Mode</a><br>";
    html += "</body></html>";

    client.print(html);
    delay(1);
  }
}

void displayIdea() {
  lcd.clear();
  lcd.setCursor(0, 0);

  // Show current mode on LCD
  switch (currentMode) {
    case 0:
      lcd.print("Useless Mode");
      break;
    case 1:
      lcd.print("Idiotic Mode");
      break;
    case 2:
      lcd.print("Insane Mode");
      break;
  }

  lcd.setCursor(0, 1);
  
  // Randomly select an idea and a hurtful comment
  int ideaIndex = random(0, 3);
  int commentIndex = random(0, 3);

  lcd.print(inventionIdeas[ideaIndex]);
  delay(1000);  // Show idea for a while

  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print(hurtfulComments[commentIndex]);
}
